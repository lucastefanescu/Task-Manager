{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Desktop\\\\demo(1)\\\\TaskManager\\\\taskmanagerfrontend\\\\src\\\\Components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  toggleVisibility\n}) {\n  _s();\n  const [Title, setTitle] = useState(\"\");\n  const handleClick = e => {\n    e.preventDefault();\n    const Task = {\n      Title\n    };\n    toggleVisibility();\n    fetch(\"http://localhost:8080/Task/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"applications/json\"\n      },\n      body: JSON.stringify(Task)\n    }).then(() => {\n      console.log(\"New Task Added\");\n    }).catch(console.error());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backgroundNewTask\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewTask\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: handleClick,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(TaskForm, \"uS6+s3RK/9iM8vOdQs2g6oLNu3U=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskForm","toggleVisibility","_s","Title","setTitle","handleClick","e","preventDefault","Task","fetch","method","headers","body","JSON","stringify","then","console","log","catch","error","children","className","type","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Desktop/demo(1)/TaskManager/taskmanagerfrontend/src/Components/TaskForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TaskForm({ toggleVisibility }) {\r\n\tconst [Title, setTitle] = useState(\"\");\r\n\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst Task = { Title };\r\n\t\ttoggleVisibility();\r\n\t\tfetch(\"http://localhost:8080/Task/add\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"applications/json\" },\r\n\t\t\tbody: JSON.stringify(Task),\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log(\"New Task Added\");\r\n\t\t\t})\r\n\t\t\t.catch(console.error());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"backgroundNewTask\">\r\n\t\t\t\t<div className=\"NewTask\">\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\tTitle:\r\n\t\t\t\t\t\t\t<input type=\"text\" onChange={(e) => setTitle(e.target.value)} />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<button class=\"button\" onClick={handleClick}>\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,WAAW,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG;MAAEL;IAAM,CAAC;IACtBF,gBAAgB,CAAC,CAAC;IAClBQ,KAAK,CAAC,gCAAgC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAoB,CAAC;MAChDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC1B,CAAC,CAAC,CACAO,IAAI,CAAC,MAAM;MACXC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACCtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACCvB,OAAA;MAAKwB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,eACjCvB,OAAA;QAAKwB,SAAS,EAAC,SAAS;QAAAD,QAAA,eACvBvB,OAAA;UAAAuB,QAAA,gBACCvB,OAAA;YAAAuB,QAAA,GAAO,QAEN,eAAAvB,OAAA;cAAOyB,IAAI,EAAC,MAAM;cAACC,QAAQ,EAAGjB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACkB,MAAM,CAACC,KAAK;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACRhC,OAAA;YAAQiC,KAAK,EAAC,QAAQ;YAACC,OAAO,EAAE1B,WAAY;YAAAe,QAAA,EAAC;UAE7C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACL,CAAC;AAEL;AAAC3B,EAAA,CAnCuBF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}