{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Desktop\\\\demo(1)\\\\TaskManager\\\\taskmanagerfrontend\\\\src\\\\Components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskForm(prop) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [taskType, setTaskType] = useState(\"\");\n  const [dueDate, setdueDate] = useState(\"\");\n  const handleCancelClick = useCallback(() => {\n    prop.toggleFormVisibility();\n  });\n  const handleCheckWork = () => {\n    if (document.getElementById(\"personalCheckBox\").checked && document.getElementById(\"workCheckBox\").checked) {\n      document.getElementById(\"personalCheckBox\").checked = false;\n    }\n    setTaskType(\"work\");\n  };\n  const handleCheckPersonal = () => {\n    if (document.getElementById(\"workCheckBox\").checked && document.getElementById(\"personalCheckBox\").checked) {\n      document.getElementById(\"workCheckBox\").checked = false;\n    }\n    setTaskType(\"personal\");\n  };\n  const handleClick = e => {\n    e.preventDefault();\n    const Task = {\n      title,\n      taskType,\n      dueDate\n    };\n    fetch(\"http://localhost:8080/Task/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(Task)\n    }).then(() => {\n      prop.toggleFormVisibility();\n      prop.updateTasks();\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newTaskTitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newTaskCheckboxes\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newTaskPersonal\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Personal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"personalCheckBox\",\n              type: \"checkbox\",\n              onChange: handleCheckPersonal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newTaskWork\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Work:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"workCheckBox\",\n              type: \"checkbox\",\n              onChange: handleCheckWork\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newTaskDueDate\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setdueDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newTaskCancelBtn\",\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newTaskCreateBtn\",\n          onClick: handleClick,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(TaskForm, \"YViJFmK+vJnJJRvZRvyv6MKqrBE=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useCallback","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskForm","prop","_s","title","setTitle","taskType","setTaskType","dueDate","setdueDate","handleCancelClick","toggleFormVisibility","handleCheckWork","document","getElementById","checked","handleCheckPersonal","handleClick","e","preventDefault","Task","fetch","method","headers","body","JSON","stringify","then","updateTasks","catch","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Desktop/demo(1)/TaskManager/taskmanagerfrontend/src/Components/TaskForm.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TaskForm(prop) {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [taskType, setTaskType] = useState(\"\");\r\n\tconst [dueDate, setdueDate] = useState(\"\");\r\n\r\n\tconst handleCancelClick = useCallback(() => {\r\n\t\tprop.toggleFormVisibility();\r\n\t});\r\n\tconst handleCheckWork = () => {\r\n\t\tif (\r\n\t\t\tdocument.getElementById(\"personalCheckBox\").checked &&\r\n\t\t\tdocument.getElementById(\"workCheckBox\").checked\r\n\t\t) {\r\n\t\t\tdocument.getElementById(\"personalCheckBox\").checked = false;\r\n\t\t}\r\n\t\tsetTaskType(\"work\");\r\n\t};\r\n\tconst handleCheckPersonal = () => {\r\n\t\tif (\r\n\t\t\tdocument.getElementById(\"workCheckBox\").checked &&\r\n\t\t\tdocument.getElementById(\"personalCheckBox\").checked\r\n\t\t) {\r\n\t\t\tdocument.getElementById(\"workCheckBox\").checked = false;\r\n\t\t}\r\n\t\tsetTaskType(\"personal\");\r\n\t};\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst Task = { title, taskType, dueDate };\r\n\t\tfetch(\"http://localhost:8080/Task/add\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(Task),\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tprop.toggleFormVisibility();\r\n\t\t\t\tprop.updateTasks();\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"NewTask\">\r\n\t\t\t\t<h1>New Task</h1>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div className=\"newTaskTitle\">\r\n\t\t\t\t\t\t<label>Title:</label>\r\n\t\t\t\t\t\t<input type=\"text\" onChange={(e) => setTitle(e.target.value)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"newTaskCheckboxes\">\r\n\t\t\t\t\t\t<div className=\"newTaskPersonal\">\r\n\t\t\t\t\t\t\t<label>Personal:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"personalCheckBox\"\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tonChange={handleCheckPersonal}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"newTaskWork\">\r\n\t\t\t\t\t\t\t<label>Work:</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"workCheckBox\"\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tonChange={handleCheckWork}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"newTaskDueDate\">\r\n\t\t\t\t\t\t<label>Due Date: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tonChange={(e) => setdueDate(e.target.value)}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button className=\"newTaskCancelBtn\" onClick={handleCancelClick}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"newTaskCreateBtn\" onClick={handleClick}>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}